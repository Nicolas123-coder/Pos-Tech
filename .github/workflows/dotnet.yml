name: .NET CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: YourStrong@Passw0rd
        ports:
          - 1433:1433

    steps:
      - uses: actions/checkout@v3

      - name: Aguardar SQL Server ficar pronto
        run: |
          echo "Esperando SQL Server iniciar..."
          for i in {1..10}; do
            STATUS=$(docker exec $(docker ps -q -f ancestor=mcr.microsoft.com/mssql/server:2022-latest) /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong@Passw0rd' -Q "SELECT 1" -b -1 2>&1 || echo "erro")
            if [[ "$STATUS" != "erro" ]]; then
              echo "SQL Server está pronto!"
              exit 0
            fi
            echo "Tentativa $i - SQL Server ainda não está pronto, aguardando..."
            sleep 5
          done
          echo "SQL Server não ficou pronto a tempo"
          exit 1

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        working-directory: ./Fase02
        run: dotnet restore

      - name: Build
        working-directory: ./Fase02
        run: dotnet build --no-restore

      - name: Run tests
        working-directory: ./Fase02
        run: dotnet test --no-build --verbosity normal
        env:
          ConnectionStrings__DefaultConnection: "Server=localhost;Database=ContactsDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;MultipleActiveResultSets=true;ConnectRetryCount=5;ConnectRetryInterval=10"
