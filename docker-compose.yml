networks:
  monitoring:
  app-network:

volumes:
  contacts_api:
  sqlserver_data:
  prometheus_data:
  grafana_data:

services:
  contacts-api:
    build:
      context: ./Pos-Tech
      dockerfile: API/Dockerfile
    container_name: contacts-api
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sql-server;Database=ContactsDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True
      - Prometheus__MetricsPath=/metrics
      - ASPNETCORE_URLS=http://+:80
      - APPLY_MIGRATIONS=true
    volumes:
      - ./Pos-Tech:/src/Pos-Tech
      - contacts_api:/app
    depends_on:
      sql-server:
        condition: service_healthy
    networks:
      - app-network
      - monitoring
    restart: unless-stopped

  sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-server
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_DATABASE=ContactsDb
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pgrep", "sqlservr"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Pos-Tech/Monitoring/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - contacts-api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./Pos-Tech/Monitoring/Grafana/provisioning:/etc/grafana/provisioning
      - ./Pos-Tech/Monitoring/Grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  consumidor:
    build:
      context: ./Pos-Tech
      dockerfile: Consumer/Dockerfile
    container_name: consumidor
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sql-server;Database=ContactsDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True
    depends_on:
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped
